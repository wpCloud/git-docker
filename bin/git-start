#!/bin/sh
##
## git run DiscoDonniePresents/www.discodonniepresents.com 50400
## git run wpcloud/www.wpcloud.io 50400
##
## RunDockerContainer   DiscoDonniePresents/www.discodonniepresents.com   discodonniepresents.com   50800   develop
## RunDockerContainer   DiscoDonniePresents/www.discodonniepresents.com   discodonniepresents.com   50840
##
## RunDockerContainer UsabilityDynamics/www.libertybellagents.com
##
##
## git start DiscoDonniePresents/www.discodonniepresents.com   discodonniepresents.com
##
## git config --global color.ui auto
##
##
## @todo Only fetch passed TAG if not currently in git repository.
function RunDockerContainer {
  ## echo "Creating SSH connection to wpCloud.io on AMARAH."

  if [ -f /etc/environment ]; then
    source /etc/environment
  fi

  export _HOSTNAME=${2:-$(basename `git rev-parse --show-toplevel`)}
  export _TAG=${1}
  export _PORT=${3}
  export _BRANCH=${4}

  ## Lowercase.
  ## export _IMAGE=$(echo $_TAG | tr "/" "/" | tr '[:upper:]' '[:lower:]' )

  ## Lowercase and normalize.
  ## export _NAME=$(echo $_TAG | tr "/" "-" | tr '[:upper:]' '[:lower:]' )

  #the logic (using bash string replacement)
  export _ORGANIZATION=${_TAG%"/"*}
  export _APPLICATION=${_TAG/"$_ORGANIZATION"/}

  if [ -d ${PWD}/.git ]; then
    ## echo " - You seem to be in a git repo.."
    export _GIT_DIR=${PWD}/.git
    export _WORK_TREE=${PWD}
  else
    export _GIT_DIR="/opt/sources/${_TAG}/.git";
    export _WORK_TREE="/opt/sources/${_TAG}";
  fi

  ## > combine "DiscoDonniePresents/www.discodonniepresents.com"
  export _TAG=$(basename $(dirname ${_WORK_TREE}))/$(basename ${_WORK_TREE});

  ## > lowercase "discodonniepresents/www.discodonniepresents.com"
  export _IMAGE_NAME=$( echo $(basename $(dirname ${_WORK_TREE}))/$(basename ${_WORK_TREE}) | tr "/" "/" | tr '[:upper:]' '[:lower:]' )

  ## Clone or Refresh
  if [ ! -d ${_GIT_DIR} ]; then
    echo "- Cloning to /opt/sources/${_TAG}..."
    git clone --quiet "git@github.com:${_TAG}.git" "/opt/sources/${_TAG}"
  else
    echo " - Refreshing <${_WORK_TREE}>..."
    git --git-dir=${_GIT_DIR} --work-tree=${_WORK_TREE} fetch  --quiet
    git --git-dir=${_GIT_DIR} --work-tree=${_WORK_TREE} reset --hard --quiet
    git --git-dir=${_GIT_DIR} --work-tree=${_WORK_TREE} clean -fd --quiet --exclude=wp-content/plugins/wp-cloud
    git --git-dir=${_GIT_DIR} --work-tree=${_WORK_TREE} pull --quiet
  fi

  ## Create Storage
  if [ ! -d ${_WORK_TREE} ]; then
    echo "- Creating storage..."
    export _STORAGE_DIR=" /opt/storage/${_TAG}/media";
    mkdir -p /opt/storage/${_TAG}/media
    chown -R core:core /opt/storage/${_TAG}
  fi

  ## Update settings now that we have git repository...
  export _HOSTNAME=${2:-$(basename `git rev-parse --show-toplevel`)}
  export _BRANCH=$(git rev-parse --abbrev-ref HEAD)
  echo " - Going to go with <${_BRANCH}> branch."

  ## Build / Rebuild
  ## if [ $_DIFF == "Dockerfile" ]; then echo "match"; fi;
  ## git diff-index --name-only HEAD
  ## @note we are silencing all errors so a failed build will not stop rocess...
  echo " - Building image <${_IMAGE_NAME}:${_BRANCH}>."
  docker build --tag=${_IMAGE_NAME}:${_BRANCH} --quiet=true ${_WORK_TREE} >/dev/null 2>&1

  ## Remove Old Instance
  ## echo " - Checking for old instances, and removing."
  docker rm -fv ${_HOSTNAME}.${_BRANCH}.git >/dev/null 2>&1

  ## Create New Instance
  echo " - Starting server <${_HOSTNAME}.${_BRANCH}.git>."
  export CONTAINER_ID=$(docker run -itd --restart=always \
    --name=${_HOSTNAME}.${_BRANCH}.git \
    --hostname=${_HOSTNAME} \
    --memory=2g \
    --add-host=api.wordpress.com:${COREOS_PRIVATE_IPV4} \
    --add-host=downloads.wordpress.com:${COREOS_PRIVATE_IPV4} \
    --add-host=${_HOSTNAME}.internal:127.0.0.1 \
    --publish=${COREOS_PRIVATE_IPV4}:${_PORT}:80 \
    --env=DOCKER_TAG=${_TAG} \
    --env=GIT_ORGANIZATION=${_ORGANIZATION} \
    --volume=${_WORK_TREE}:/var/www/wp-content/storage \
    --volume=${_WORK_TREE}:/var/www \
    --volume=/opt/sources/wpCloud/www.wpcloud.io/wp-content/plugins/wp-cloud:/var/www/wp-content/plugins/wp-cloud:ro \
    --workdir=${_WORK_TREE} \
    ${_IMAGE_NAME}:${_BRANCH})

  echo " - Server started with ID <${CONTAINER_ID}>."

  ## docker logs discodonniepresents.com
  ## docker top discodonniepresents.com
  ## curl $(docker port discodonniepresents.com 80)/xmlrpc.php

}

RunDockerContainer $1 $2 $3 $4